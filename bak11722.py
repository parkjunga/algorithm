'''

가장 긴 감소하는 부분 수열 분류

문제
수열 A가 주어졌을 때, 가장 긴 감소하는 부분 수열을 구하는 프로그램을 작성하시오.

예를 들어,
수열 A = {10, 30, 10, 20, 20, 10} 인 경우에 가장 긴 감소하는 부분 수열은 A = {10, 30, 10, 20, 20, 10}  이고, 길이는 3이다.

입력
첫째 줄에 수열 A의 크기 N (1 ≤ N ≤ 1,000)이 주어진다.

둘째 줄에는 수열 A를 이루고 있는 Ai가 주어진다. (1 ≤ Ai ≤ 1,000)

출력
첫째 줄에 수열 A의 가장 긴 감소하는 부분 수열의 길이를 출력한다.

예제 입력 1
6
10 30 10 20 20 10

max(dp[i], dp[j] + lst[i])
예제 출력 1
3


'''
'''
현재값 10일때 30만 크니까 현재dp에 체크 +1 
현재값 20일떄 30만 크니까 현재dp +1
현재값 20일떄 30만 크니까 현재 dp +1
현재값 10일때 30도 크니까 현재값이랑 dp+1 비교시 더한게 더크니까 그값
현재값 10일떄 20도 큼 그러나 현재 dp가 3이니까 그게 더커서냅둠
현재값 10일떄 20도 똑같음 
다비교 
'''
from sys import stdin
n = int(stdin.readline())
arr = list(map(int,stdin.readline().split()))
dp = [1 for _ in range(n)]
for i in range(1,n):
    for j in range(i): # 2일때 ,0,1
        if arr[j] > arr[i]: # 이전값이 현재값보다 클 떄
            dp[i] = max(dp[i],dp[j]+1) # 갯수는 = 현재값, 이전값+1중 큰거
print(max(dp))

