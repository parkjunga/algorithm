'''
가장 큰 증가 부분 수열 분류

문제
수열 A가 주어졌을 때, 그 수열의 증가 부분 수열 중에서 합이 가장 큰 것을 구하는 프로그램을 작성하시오.
예를 들어, 수열 A = {1, 100, 2, 50, 60, 3, 5, 6, 7, 8} 인 경우에 합이
가장 큰 증가 부분 수열은 A = {1, 100, 2, 50, 60, 3, 5, 6, 7, 8} 이고, 합은 113이다.

입력
첫째 줄에 수열 A의 크기 N (1 ≤ N ≤ 1,000)이 주어진다.

둘째 줄에는 수열 A를 이루고 있는 Ai가 주어진다. (1 ≤ Ai ≤ 1,000)

출력
첫째 줄에 수열 A의 합이 가장 큰 증가 부분 수열의 합을 출력한다.
-> 1,2,50,60 ??

예제 입력 1
10
1 100 2 50 60 3 5 6 7 8
0 0   0  0 0  0 0 0 0 0

1 101
2 3
50 53
60 61
61

...
그럼 비교를 ?
앞에는 가장 작은 값이 와야됨

예제 출력 1
113
'''
n = int(input())
lst = list(map(int, input().split()))

dp = [x for x in lst] # 동일 배열 생성

for i in range(n):
    for j in range(i): # 이전값들과 비교
        if lst[i] > lst[j]: # 현재값 > 이전값
            print(lst[i],lst[j])
            print('=====================')
            print('동일배열 i값 : ', dp[i]) # 현재값
            print('동일배열 j값 ',dp[j]) # 이전값
            print('맨첨',lst[i]) # 현재값  100, 101 비교시 101 로 바뀜
            print("이전배열 : ",dp)
            dp[i] = max(dp[i], dp[j] + lst[i]) # 비교기준값, 이전값 + 현재값
            print("현재배열 : ",dp)
            print('=====================')

print(max(dp))